import React from 'react';
import { ComponentStory } from '@storybook/react';
declare const _default: {
    title: string;
    component: React.FC<{
        name?: string | undefined;
        label?: string | undefined;
        placeholder?: string | undefined;
        labelClass?: string | undefined;
        description?: string | undefined;
        defaultValue?: string | undefined;
        disabled?: boolean | undefined;
        onChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
        onBlur?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
        type?: React.HTMLInputTypeAttribute | undefined;
        min?: number | undefined;
        max?: number | undefined;
        required?: boolean | undefined;
        error?: string | undefined;
    }>;
};
export default _default;
export declare const Primary: ComponentStory<React.FC<{
    name?: string | undefined;
    label?: string | undefined;
    placeholder?: string | undefined;
    labelClass?: string | undefined;
    description?: string | undefined;
    defaultValue?: string | undefined;
    disabled?: boolean | undefined;
    onChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    onBlur?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    type?: React.HTMLInputTypeAttribute | undefined;
    min?: number | undefined;
    max?: number | undefined;
    required?: boolean | undefined;
    error?: string | undefined;
}>>;
export declare const Secondary: ComponentStory<React.FC<{
    name?: string | undefined;
    label?: string | undefined;
    placeholder?: string | undefined;
    labelClass?: string | undefined;
    description?: string | undefined;
    defaultValue?: string | undefined;
    disabled?: boolean | undefined;
    onChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    onBlur?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    type?: React.HTMLInputTypeAttribute | undefined;
    min?: number | undefined;
    max?: number | undefined;
    required?: boolean | undefined;
    error?: string | undefined;
}>>;
export declare const Plain: ComponentStory<React.FC<{
    name?: string | undefined;
    label?: string | undefined;
    placeholder?: string | undefined;
    labelClass?: string | undefined;
    description?: string | undefined;
    defaultValue?: string | undefined;
    disabled?: boolean | undefined;
    onChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    onBlur?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    type?: React.HTMLInputTypeAttribute | undefined;
    min?: number | undefined;
    max?: number | undefined;
    required?: boolean | undefined;
    error?: string | undefined;
}>>;
export declare const Disabled: ComponentStory<React.FC<{
    name?: string | undefined;
    label?: string | undefined;
    placeholder?: string | undefined;
    labelClass?: string | undefined;
    description?: string | undefined;
    defaultValue?: string | undefined;
    disabled?: boolean | undefined;
    onChange?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    onBlur?: ((e: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
    type?: React.HTMLInputTypeAttribute | undefined;
    min?: number | undefined;
    max?: number | undefined;
    required?: boolean | undefined;
    error?: string | undefined;
}>>;
